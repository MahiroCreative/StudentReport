#include "DxLib.h"

/************************/
// 
// ■問題解く前に
// 　ネットで検索するのはOK
// 　周りの人に質問するのはNG
// 　画像サイズは自分で確認する
// 
// ■問題1
// 　敵の画像を取得し、画面中央に表示させる
// 
// ■問題2
// 　変数を作成し、敵を左右に移動する処理を実装する
// 　この際、画面端にたどり着いたら移動方向を反転させる
// 　　・左右方向の移動量 : 3
// 
// ■問題3
//   敵をキーボードの入力に応じて上下移動する処理を問題2に追加する
// 　この際、画面外に出ないようにする
// 　　・上下方向の移動量 : 3
// 　　・キーボードは矢印上キーと下キー
// 
// ■問題4
// 　新しい敵の変数を用意し、画面端に沿って動く処理を実装する
// 　　・移動量は同じ
// 
// ■問題5
// 　問題4を配列、for文を用いて4体分実装する
// 　開始位置は画面左上、左下、右上、右下とする
// 
/************************/

/************************/
// 
// ■エキストラ問題1
//   問題2をSTLのvector(またはlist)に書き換えよ
//   また、3秒経過するごとに末尾に敵を追加し、
//   5秒経過するごとに先頭の敵を1体消す処理も追加せよ
//     追加する場所は左上とする
// 
// ■エキストラ問題2
//   Templateを用いて渡した引数を足す関数を実装する
//
/************************/

namespace
{
	// 画面の幅・高さ
	constexpr int kScreenWidth = 640;
	constexpr int kScreenHeight = 480;
}

int WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int)
{
	// 画面モードの設定
	SetGraphMode(kScreenWidth, kScreenHeight, 16);
	// ウィンドウモードに
	ChangeWindowMode(true);
	// 初期化処理
	if (DxLib_Init() == -1)
	{
		// 失敗した場合はエラーとして終了
		return -1;
	}
	// 描画先を裏画面
	SetDrawScreen(DX_SCREEN_BACK);

	/****************************************/
	// ゲームループ
	/****************************************/
	while (ProcessMessage() != -1)
	{
		// このフレームの開始時刻を覚えておく
		LONGLONG start = GetNowHiPerformanceCount();

		// 画面を消す
		ClearDrawScreen();

		/****************************************/
		// ゲーム処理
		/****************************************/

		// 画面を入れ替える
		ScreenFlip();

		// エスケープキーが押されたら終了する
		if (CheckHitKey(KEY_INPUT_ESCAPE))
		{
			break;
		}

		// FPS60に固定する
		// 16.66ms(16667マイクロ秒)経過するまで待つ
		while (GetNowHiPerformanceCount() - start < 16667) {}
	}

	DxLib_End();

	return 0;
}